<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="./js/color-modes.js"></script>
    <link
      rel="stylesheet"
      href="./bootstrap-icons-1.10.5/font/bootstrap-icons.min.css"
    />
    <link rel="shortcut icon" href="./img/ali.png" type="image/x-icon" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta
      name="author"
      content="Mark Otto, Jacob Thornton, and Bootstrap contributors"
    />
    <meta name="generator" content="Hugo 0.112.5" />
    <title>Welcome page</title>

    <link href="./css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="../css/dark-light.css" />

    <!-- Custom styles for this template -->
    <link href="./css/sidebars.css" rel="stylesheet" />
    <link rel="stylesheet" href="./css/myStyle.css" />

    <style>
      /* Custom default button */
      .btn-light,
      .btn-light:hover,
      .btn-light:focus {
        color: #333;
        text-shadow: none;
        /* Prevent inheritance from `body` */
      }

      /*
 * Base structure
 */

      body {
        text-shadow: 0 0.05rem 0.1rem rgba(0, 0, 0, 0.5);
        box-shadow: inset 0 0 5rem rgba(0, 0, 0, 0.5);
      }

      .cover-container {
        max-width: 42em;
      }

      /*
 * Header
 */

      .nav-masthead .nav-link {
        color: rgba(255, 255, 255, 0.5);
        border-bottom: 0.25rem solid transparent;
      }

      .nav-masthead .nav-link:hover,
      .nav-masthead .nav-link:focus {
        border-bottom-color: rgba(255, 255, 255, 0.25);
      }

      .nav-masthead .nav-link + .nav-link {
        margin-left: 1rem;
      }

      .nav-masthead .active {
        color: #fff;
        border-bottom-color: #fff;
      }

      /** error  */
      #emailerror , #passworderror ,#usernameerror{
       color: red;
       margin-left: 0.4rem;
       font-weight: 600;
      }

    </style>
  </head>

  <body class="d-flex h-100 text-center text-bg-dark">
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <%- include('./header.ejs',{currentPage: "signup" }) %>

      <h1>signup</h1>
      <form
        id="signupForm"
        method="post"
        action="/signup"
        class="text-start w-100 mx-auto mt-5"
        style="max-width: 20em"
      >
        <div class="mb-3">
          <label for="exampleInputEmail1" class="form-label">Username</label>
          <input
            name="username"
            type="text"
            required
            class="form-control"
            id="exampleInputUsername"
            aria-describedby="emailHelp"
          />
          <p id="usernameerror"></p>

        </div>
        <div class="mb-3">
          <label for="exampleInputEmail1" class="form-label"
            >Email address</label
          >
          <input
            name="email"
            type="email"
            required
            class="form-control"
            id="emailId"
            aria-describedby="emailHelp"
          />
          <p id="emailerror"></p>
        </div>
        <div class="mb-3">
          <label for="exampleInputPassword1" class="form-label">Password</label>
          <input
            name="password"
            type="password"
            required
            class="form-control"
            id="passwordId"
          />
          <p id="passworderror"></p>
        </div>
        <div class="mb-3 form-check">
          <input type="checkbox" class="form-check-input" id="exampleCheck1" />
          <label class="form-check-label" for="exampleCheck1"
            >Check me out</label
          >
        </div>
        <button type="submit" class="btn btn-primary">signup</button>
      </form>
      <footer class="mt-auto text-white-50">
        <p>Designed and developed by Youness Bachar Khir Â© 2024</p>
      </footer>
    </div>
    <script>

      
      
      signupForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const res = await fetch("/signup", {
          method: "POST",
          body: JSON.stringify({
            email: emailId.value,
            password: passwordId.value,
            username: exampleInputUsername.value,
          }),
          headers: { "Content-Type": "application/json" },
        });

        const data = await res.json();
        if (data.arrValidationError) {
          data.arrValidationError.forEach(item => {
            if(item.path == "email"){
                emailerror.textContent = "please provide a valid email"
            }
            if(item.path == "password"){
              passworderror.textContent = "Password must be at least 8 characters with 1 upper case letter and 1 number"
            }
          });
         
        }

        
        if (data.existEmail) {
          emailerror.textContent = "email already existed"
        }
        if(data.existUsername){
          usernameerror.textContent = "username already existed"
        }

        if (data.id) {
          location.assign("/home");
        }
      });
    </script>
    <script src="./js/bootstrap.bundle.min.js"></script>
  </body>
</html>
